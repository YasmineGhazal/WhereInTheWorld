{"version":3,"file":"static/js/862.73d1109f.chunk.js","mappings":"uKAGA,MAoDA,EApDgBA,KACZ,IAAI,KAAEC,IAASC,EAAAA,EAAAA,KACf,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,YAyBxB,OAvBAC,EAAAA,EAAAA,YAAU,KACgBC,WAClB,MAAMC,QAAYC,MAAM,wCAADC,OAAyCT,EAAI,wFAC9DU,QAAoBH,EAAII,OAE9BR,GAAQ,MACJS,WAAYF,EAAYE,WACxBC,QAASH,EAAYG,QACrBC,OAAQJ,EAAYI,OACpBC,UAAWL,EAAYK,UACvBC,KAAMN,EAAYO,MAAMC,IACxBC,QAAST,EAAYO,MAAMG,IAC3BC,KAAMX,EAAYW,KAAKC,SACvBC,WAAYC,OAAOC,KAAKf,EAAYW,KAAKE,YAAYG,KAAIC,GAAOjB,EAAYW,KAAKE,WAAWI,GAAKL,WACjGM,WAAYJ,OAAOC,KAAKf,EAAYkB,YAAYF,KAAIC,GAAG,GAAAlB,OAAOC,EAAYkB,WAAWD,GAAKN,KAAI,MAAAZ,OAAKC,EAAYkB,WAAWD,GAAKE,OAAM,OACrIC,QAASpB,EAAYoB,QACrBC,UAAWP,OAAOC,KAAKf,EAAYqB,WAAWL,KAAIC,GAAG,GAAAlB,OAAOC,EAAYqB,UAAUJ,MAAQK,KAAK,SAChG,EAGPC,EAAe,GAChB,CAACjC,IAEIE,GACJgC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKC,IAAKpC,EAAKc,KAAMI,IAAKlB,EAAKiB,WAC/Be,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKlC,EAAKmB,QACVa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,kBAAqBlC,EAAKqB,eAC1DW,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,iBAAoBlC,EAAKU,WAAW,QACpEsB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,aAAgBlC,EAAKY,OAAO,QAC5DoB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,iBAAoBlC,EAAKa,cACzDmB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,cAAiBlC,EAAKW,QAAQ,QAC9DqB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,iBAAoBlC,EAAK0B,eACzDM,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EAAGC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,gBAAmBlC,EAAK6B,kBAEzD7B,EAAK4B,QAAQS,SAAWL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EAC/CC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,aAAYC,SAAC,uBAC5BlC,EAAK4B,QAAQJ,KAAIc,IAAUH,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAE,YAAAjC,OAAc+B,GAAUG,QAAUH,GAAYxC,EAAOwC,EAAQJ,SAAEI,gBAK/GH,EAAAA,EAAAA,KAAAO,EAAAA,SAAA,GAAK,C","sources":["Country.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams, Link } from 'react-router-dom';\n\nconst Country = () => {\n    let { code } = useParams();\n    const [data, setData] = useState();\n\n    useEffect(() => {\n        const getCountyData = async () => {\n            const res = await fetch(`https://restcountries.com/v3.1/alpha/${code}?fields=name,capital,population,region,flags,subregion,currencies,languages,borders`);\n            const countryData = await res.json();\n\n            setData(() => ({\n                population: countryData.population,\n                capital: countryData.capital,\n                region: countryData.region,\n                subregion: countryData.subregion,\n                flag: countryData.flags.png,\n                flagAlt: countryData.flags.alt,\n                name: countryData.name.official,\n                nativeName: Object.keys(countryData.name.nativeName).map(key => countryData.name.nativeName[key].official),\n                currencies: Object.keys(countryData.currencies).map(key => `${countryData.currencies[key].name} (${countryData.currencies[key].symbol})`),\n                borders: countryData.borders,\n                languages: Object.keys(countryData.languages).map(key => `${countryData.languages[key]}`).join(', '),\n            }));\n        };\n\n        getCountyData();\n    }, [code]);\n\n    return (data ?\n        <div className=\"country-content\">\n            <img src={data.flag} alt={data.flagAlt} ></img>\n            <div className=\"country-data\">\n                <h1>{data.name}</h1>\n                <div className=\"country-data-mid\">\n                    <p><span className=\"info-title\">Native name: </span>{data.nativeName}</p>\n                    <p><span className=\"info-title\">Population: </span>{data.population} </p>\n                    <p><span className=\"info-title\">Region: </span>{data.region} </p>\n                    <p><span className=\"info-title\">Sub-region: </span>{data.subregion}</p>\n                    <p><span className=\"info-title\">Capital: </span>{data.capital} </p>\n                    <p><span className=\"info-title\">Currencies: </span>{data.currencies}</p>\n                    <p><span className=\"info-title\">Languages: </span>{data.languages}</p>\n                </div>\n                {!!data.borders.length &&  <div className=\"borders\">\n                    <span className=\"info-title\">Border countries: </span>\n                    {data.borders.map(border => <Link to={`/country/${border}`} onClick={(border) => (code = border)}>{border}</Link>)}\n                </div>}\n            </div>\n        </div>\n        :\n        <></>\n    );\n}\n\nexport default Country;\n"],"names":["Country","code","useParams","data","setData","useState","useEffect","async","res","fetch","concat","countryData","json","population","capital","region","subregion","flag","flags","png","flagAlt","alt","name","official","nativeName","Object","keys","map","key","currencies","symbol","borders","languages","join","getCountyData","_jsxs","className","children","_jsx","src","length","border","Link","to","onClick","_Fragment"],"sourceRoot":""}